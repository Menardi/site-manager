server {
	root /srv/www/_SITEURL_/public_html;
	index index.html index.php;

	access_log /srv/www/_SITEURL_/logs/access.log;
	error_log /srv/www/_SITEURL_/logs/error.log;

	listen 443 ssl;

	server_name _SITEURL_ www._SITEURL_;

	ssl_certificate /etc/letsencrypt/live/_SITEURL_/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/_SITEURL_/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

	location / {
		#try_files $uri $uri/ /index.html =404;
		try_files $uri $uri/ =404;
	}

	error_page 404 /404.html;

    # Uncomment if you have FastCGI set up for PHP
	# location ~ \.php$ {
	# 	try_files $uri =404;
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	fastcgi_param SCRIPT_FILENAME /srv/www/_SITEURL_/public_html$fastcgi_script_name;
	#	include fastcgi_params;
	# }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}

	# for letsencrypt
	location ~ /.well-known {
		allow all;
	}
}

server {
	listen 80;
	server_name _SITEURL_ www._SITEURL_;
	return 301 https://$host$request_uri;
}
